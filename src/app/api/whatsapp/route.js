import { NextResponse } from 'next/server';

// WhatsApp Business API configuration
const WHATSAPP_API_URL = process.env.WHATSAPP_API_URL || 'https://graph.facebook.com/v18.0';
const WHATSAPP_PHONE_NUMBER_ID = process.env.WHATSAPP_PHONE_NUMBER_ID;
const WHATSAPP_ACCESS_TOKEN = process.env.WHATSAPP_ACCESS_TOKEN;
const RECIPIENT_PHONE_NUMBER = process.env.WHATSAPP_RECIPIENT_PHONE_NUMBER;

export async function POST(request) {
  try {
    // Ki·ªÉm tra c·∫•u h√¨nh WhatsApp
    if (!WHATSAPP_PHONE_NUMBER_ID || !WHATSAPP_ACCESS_TOKEN || !RECIPIENT_PHONE_NUMBER) {
      console.error('Missing WhatsApp configuration');
      return NextResponse.json({
        success: false,
        error: 'WhatsApp configuration is missing'
      }, { status: 500 });
    }

    const formData = await request.json();
    
    // T·∫°o n·ªôi dung tin nh·∫Øn
    const message = `üîî *TH√îNG B√ÅO FORM M·ªöI*\n\n` +
      `üë§ *H·ªç t√™n:* ${formData.name}\n` +
      `üìû *ƒêi·ªán tho·∫°i:* ${formData.phone}\n` +
      `üè¢ *C√¥ng ty:* ${formData.company}\n` +
      `üìß *Email:* ${formData.email}\n` +
      `üìã *Nhu c·∫ßu:* ${formData.requirements}\n` +
      `üìù *Chi ti·∫øt:* ${formData.requirementDetails || 'Kh√¥ng c√≥'}\n` +
      `‚è∞ *Th·ªùi gian:* ${new Date().toLocaleString('vi-VN')}`;

    // G·ª≠i tin nh·∫Øn WhatsApp
    const whatsappResponse = await fetch(
      `${WHATSAPP_API_URL}/${WHATSAPP_PHONE_NUMBER_ID}/messages`,
      {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${WHATSAPP_ACCESS_TOKEN}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          messaging_product: 'whatsapp',
          to: RECIPIENT_PHONE_NUMBER,
          type: 'text',
          text: {
            body: message
          }
        })
      }
    );

    const whatsappResult = await whatsappResponse.json();

    if (whatsappResponse.ok) {
      const response = NextResponse.json({
        success: true,
        message: 'Th√¥ng b√°o WhatsApp ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!',
        messageId: whatsappResult.messages?.[0]?.id
      });
      
      response.headers.set('Content-Type', 'application/json; charset=utf-8');
      return response;
    } else {
      console.error('WhatsApp API error:', whatsappResult);
      const response = NextResponse.json({
        success: false,
        error: 'Kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o WhatsApp',
        details: whatsappResult
      }, { status: 500 });
      
      response.headers.set('Content-Type', 'application/json; charset=utf-8');
      return response;
    }

  } catch (error) {
    console.error('WhatsApp notification error:', error);
    const response = NextResponse.json({
      success: false,
      error: 'L·ªói server khi g·ª≠i th√¥ng b√°o WhatsApp'
    }, { status: 500 });
    
    response.headers.set('Content-Type', 'application/json; charset=utf-8');
    return response;
  }
}

// GET endpoint ƒë·ªÉ test c·∫•u h√¨nh WhatsApp
export async function GET() {
  try {
    const config = {
      hasPhoneNumberId: !!WHATSAPP_PHONE_NUMBER_ID,
      hasAccessToken: !!WHATSAPP_ACCESS_TOKEN,
      hasRecipientNumber: !!RECIPIENT_PHONE_NUMBER,
      apiUrl: WHATSAPP_API_URL
    };

    const response = NextResponse.json({
      success: true,
      message: 'WhatsApp configuration status',
      config
    });
    
    response.headers.set('Content-Type', 'application/json; charset=utf-8');
    return response;
  } catch (error) {
    console.error('WhatsApp config check error:', error);
    const response = NextResponse.json({
      success: false,
      error: 'L·ªói khi ki·ªÉm tra c·∫•u h√¨nh WhatsApp'
    }, { status: 500 });
    
    response.headers.set('Content-Type', 'application/json; charset=utf-8');
    return response;
  }
}